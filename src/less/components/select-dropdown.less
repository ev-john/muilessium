// @name        Select dropdown
// @description Data-id attribute should be used to select id and name attributes for the hidden html select element. Should be used with label for better accessibility.
//
// @component   SelectDropdown
// @method      getSelectedIndex()        - returns index of the selected item
// @method      openDropdown()            - opens dropdown menu
// @method      closeDropdown()           - closes dropdown menu
// @method      toggleDropdown()          - opens dropdown menu if it is closed and closes it otherwise
// @method      updateState(newIndex = 0) - selects item with selected index
// @method      getState()                - returns index of the selected item
//
// @event       update-state
//
// @requires     input
// @requires     dropdown-options
// @requires     shadow-toggle
// @requires     svg-icon
//
//
// @markup
//  <div class='mui-input-wrapper'>
//      <label class='mui-input-label'>Select color</label>
//      <div class='mui-select-dropdown' id='docs-only-id--select-dropdown'>
//          <div class='select'>
//              <div class='state'></div>
//              <div class='mui-dropdown-options _shadow-1'>
//                  <div class='wrapper'>
//                      <div class='option -selected' data-value='red'>Red</div>
//                      <div class='option' data-value='green'>Green</div>
//                      <div class='option' data-value='blue'>Blue</div>
//                      <div class='option' data-value='orange'>Orange</div>
//                  </div>
//              </div>
//          </div>
//          <div class='mui-shadow-toggle'></div>
//          <div class='icon'>
//              <svg class='mui-svg-icon'>
//                  <use xlink:href='#mui-svg-icon--arrow-down'></use>
//              </svg>
//          </div>
//      </div>
//  </div>


.@{muilessium-prefix}select-dropdown {
    position: relative;    
    height: @defaults[ui-height];
    width: 100%;
    user-select: none;
    
    > .select {
        height: @defaults[ui-height];
        width: 100%;
        padding: 0 1rem;
        margin: 0;
        font-size: 1rem;
        line-height: @defaults[ui-height];
        color: @select-dropdown[color];
        appearance: none;
        border: 1px solid @select-dropdown[border-color];
        border-radius: @defaults[border-radius];
        outline: none;
        transition: border-color @defaults[animation-duration] @defaults[animation-function];

        &:hover,
        &:focus {
            cursor: pointer;
            border-color: @select-dropdown[border-color-focused];
        }
    }
    
    > .icon {
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        height: @defaults[ui-height];
        width: @defaults[ui-height];
        line-height: @defaults[ui-height];
        text-align: center;
        color: @select-dropdown[color];
        border-top-right-radius: @defaults[border-radius];
        border-bottom-right-radius: @defaults[border-radius];
        pointer-events: none;
    }

    > .icon > .@{muilessium-prefix}svg-icon {
        fill: @select-dropdown[color];
    }

    .@{muilessium-prefix}dropdown-options {
        opacity: 0;
        pointer-events: none;
        position: absolute;
        bottom: -.72rem;
        left: 0;
        width: 100%;
        transform: translateY(80%);
        transition: all @defaults[animation-duration] @defaults[animation-function];
    }

    &.-opened {
        .@{muilessium-prefix}dropdown-options {
            opacity: 1;
            pointer-events: auto;
            transform: translateY(100%);
            z-index: 11;
        }
    }
}

