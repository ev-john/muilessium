// @name        Progress bar
// @description ...
//
// @component   ProgressBar
// @method      setValue(newValue) - sets new value and animates the progress bar
// @method      getValue()         - returns current value of the progress bar
//
//
// @markup
//  <div class='mui-progress-bar' data-value='60'>
//      <div class='indicator'></div>
//      <div class='value'></div>
//  </div>



// @name        Radial progress bar
// @description Use "-align-center" option to set margin left/right to auto.
//
// @component ProgressBar
// @method    setValue(newValue) - sets new value and animates progress bar
// @method    getValue()         - returns current value of the progress bar
//
//
// @markup
//  <div class='mui-progress-bar -radial' data-value='60'>
//      <svg class='indicator' viewbox='0 0 100 100'>
//          <circle class='background' cx='50' cy='50' r='34'></circle>
//          <circle class='progress'   cx='50' cy='50' r='34'></circle>
//      </svg>
//      <div class='value'></div>
//  </div>


.@{muilessium-prefix}progress-bar {
    position: relative;
    background: @progress-bar-background;
    border-radius: @default-border-radius;
    overflow: hidden; 

    > .indicator {
        height: @default-ui-height;
        width: 0;
        background: @progress-bar-color;
    }

    > .value {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        line-height: @default-ui-height;
        text-align: center;
        color: @progress-bar-value-color;
    }

    &.-radial {
        height: @default-ui-height * 4;
        width:  @default-ui-height * 4;
        background: transparent;

        &.-align-center {
            margin-left: auto;
            margin-right: auto;
        }

        > .indicator {
            height: inherit;
            width:  inherit;
            background: inherit;
            transform: rotate(-90deg);
        }

        > .indicator > .background,
        > .indicator > .progress {
            fill: none;
            stroke-width: @default-ui-height / 2;
        }

        > .indicator > .background {
            stroke: @progress-bar-background;
        }

        > .indicator > .progress {
            stroke: @progress-bar-color;
            stroke-dasharray:  213.628; /* 2 PI R */
            stroke-dashoffset: 213.628; /* 2 PI R */
        }

        > .value {
            line-height: @default-ui-height * 4;
        }
    }
}

