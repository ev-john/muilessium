// @name        ButtonDropdown
// @description ...
//
// @component   ButtonDropdown
// @method      openDropdown()   - opens dropdown menu
// @method      closeDropdown()  - closes dropdown menu
// @method      toggleDropdown() - opens dropdown menu if it is closed and closes it otherwise
//
// @requires    button
// @requires    dropdown-options
// @requires    shadow-toggle
// @requires    svg-icon
//
//
// @markup
//  <div class='mui-button-dropdown' id='docs-only-id--button-dropdown'>
//      <a class='mui-button'>
//          <span>dropdown button</span>
//          <span>&nbsp;</span>
//          <svg class='mui-svg-icon'>
//              <use xlink:href='#mui-svg-icon--arrow-down'></use>
//          </svg>
//      </a>          
//      <div class='mui-dropdown-options'>
//          <div class='wrapper'>
//              <div class='option'>Option 1</div>
//              <div class='option'>Option 2</div>
//              <div class='option'>Option 3</div>
//              <div class='option'>Option 4</div>
//              <div class='option'>Option 5</div>
//          </div>
//      </div>
//      <div class='mui-shadow-toggle'></div>
//  </div>


.@{muilessium-prefix}button-dropdown {
    display: inline-block;
    position: relative;

    > .@{muilessium-prefix}button {
        position: relative;
    }

    > .@{muilessium-prefix}dropdown-options {
        opacity: 0;
        pointer-events: none;
        position: absolute;
        left: 0;
        bottom: -.72rem;
        transform: translateY(80%);
        width: 100%;
        transition: all @defaults[animation-duration] @defaults[animation-function];
    }

    &.-opened {
        > .@{muilessium-prefix}button {
            z-index: 11;
        }

        > .@{muilessium-prefix}dropdown-options {
            opacity: 1;
            pointer-events: auto;
            transform: translateY(100%);
        }
    }
}

